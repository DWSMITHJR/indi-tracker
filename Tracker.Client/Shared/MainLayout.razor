@inherits LayoutComponentBase
@using Tracker.Client.Services
@using Tracker.Shared.Auth
@using Tracker.Shared.Services
@using Blazored.Toast
@inject IAuthService AuthService
@inject NavigationManager NavigationManager
@inject ILogger<MainLayout> Logger
@inject IToastService ToastService
@inject IAppSettingsService AppSettingsService

<div class="min-h-screen bg-gray-100">
    <Toast />
    <div class="bg-indigo-600 pb-32">
        <nav class="bg-indigo-600">
            <div class="max-w-7xl mx-auto sm:px-6 lg:px-8">
                <div class="border-b border-indigo-300 border-opacity-25 lg:border-none">
                    <div class="flex items-center justify-between h-16 px-4 sm:px-0 lg:px-0">
                        <div class="flex items-center">
                            <div class="flex-shrink-0">
                                <a href="/" class="text-white font-bold text-xl">
                                    @_appTitle
                                </a>
                            </div>
                            <div class="hidden lg:ml-10 lg:block">
                                <div class="flex space-x-4">
                                    <a href="/" class="text-white hover:bg-indigo-500 px-3 py-2 rounded-md text-sm font-medium @(IsActive("/") ? "bg-indigo-700" : "") ">
                                        Dashboard
                                    </a>
                                    <a href="/incidents" class="text-white hover:bg-indigo-500 px-3 py-2 rounded-md text-sm font-medium @(IsActive("/incidents") ? "bg-indigo-700" : "") ">
                                        Incidents
                                    </a>
                                    <a href="/individuals" class="text-white hover:bg-indigo-500 px-3 py-2 rounded-md text-sm font-medium @(IsActive("/individuals") ? "bg-indigo-700" : "") ">
                                        Individuals
                                    </a>
                                    <a href="/contacts" class="text-white hover:bg-indigo-500 px-3 py-2 rounded-md text-sm font-medium @(IsActive("/contacts") ? "bg-indigo-700" : "") ">
                                        Contacts
                                    </a>
                                    @if (isAdmin)
                                    {
                                        <a href="/admin" class="text-white hover:bg-indigo-500 px-3 py-2 rounded-md text-sm font-medium @(IsActive("/admin") ? "bg-indigo-700" : "") ">
                                            Admin
                                        </a>
                                    }
                                </div>
                            </div>
                        </div>
                        <div class="hidden lg:block">
                            <div class="ml-4 flex items-center md:ml-6">
                                <button type="button" class="p-1 rounded-full text-indigo-200 hover:text-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-indigo-600 focus:ring-white">
                                    <span class="sr-only">View notifications</span>
                                    <svg class="h-6 w-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9" />
                                    </svg>
                                </button>

                                <!-- Profile dropdown -->
                                <div class="ml-3 relative">
                                    <div>
                                        <button type="button" @onclick="ToggleProfileDropdown" class="max-w-xs bg-indigo-600 rounded-full flex items-center text-sm focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-indigo-600 focus:ring-white" id="user-menu-button" aria-expanded="false" aria-haspopup="true">
                                            <span class="sr-only">Open user menu</span>
                                            <div class="h-8 w-8 rounded-full bg-indigo-400 flex items-center justify-center text-white font-medium">
                                                @GetUserInitials()
                                            </div>
                                        </button>
                                    </div>

                                    @if (isProfileDropdownOpen)
                                    {
                                        <div class="origin-top-right absolute right-0 mt-2 w-48 rounded-md shadow-lg py-1 bg-white ring-1 ring-black ring-opacity-5 focus:outline-none z-50" role="menu" aria-orientation="vertical" aria-labelledby="user-menu-button" tabindex="-1">
                                            <a href="/profile" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100" role="menuitem" tabindex="-1" id="user-menu-item-0">
                                                Your Profile
                                            </a>
                                            <a href="/settings" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100" role="menuitem" tabindex="-1" id="user-menu-item-1">
                                                Settings
                                            </a>
                                            <a @onclick="Logout" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 cursor-pointer" role="menuitem" tabindex="-1" id="user-menu-item-2">
                                                Sign out
                                            </a>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                        
                        <!-- Mobile menu button -->
                        <div class="-mr-2 flex items-center lg:hidden">
                            <button type="button" @onclick="ToggleMobileMenu" class="bg-indigo-600 p-1 rounded-md inline-flex items-center justify-center text-indigo-200 hover:text-white hover:bg-indigo-500 hover:bg-opacity-75 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-indigo-600 focus:ring-white" aria-controls="mobile-menu" aria-expanded="false">
                                <span class="sr-only">Open main menu</span>
                                @if (!isMobileMenuOpen)
                                {
                                    <svg class="block h-6 w-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
                                    </svg>
                                }
                                else
                                {
                                    <svg class="block h-6 w-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                                    </svg>
                                }
                            </button>
                        </div>
                    </div>
                </div>

                <!-- Mobile menu, show/hide based on menu state. -->
                @if (isMobileMenuOpen)
                {
                    <div class="lg:hidden" id="mobile-menu">
                        <div class="px-2 pt-2 pb-3 space-y-1">
                            <a href="/" class="text-white block px-3 py-2 rounded-md text-base font-medium @(IsActive("/") ? "bg-indigo-700" : "") ">
                                Dashboard
                            </a>
                            <a href="/incidents" class="text-white block px-3 py-2 rounded-md text-base font-medium @(IsActive("/incidents") ? "bg-indigo-700" : "") ">
                                Incidents
                            </a>
                            <a href="/individuals" class="text-white block px-3 py-2 rounded-md text-base font-medium @(IsActive("/individuals") ? "bg-indigo-700" : "") ">
                                Individuals
                            </a>
                            <a href="/contacts" class="text-white block px-3 py-2 rounded-md text-base font-medium @(IsActive("/contacts") ? "bg-indigo-700" : "") ">
                                Contacts
                            </a>
                            @if (isAdmin)
                            {
                                <a href="/admin" class="text-white block px-3 py-2 rounded-md text-base font-medium @(IsActive("/admin") ? "bg-indigo-700" : "") ">
                                    Admin
                                </a>
                            }
                        </div>
                        <div class="pt-4 pb-3 border-t border-indigo-700">
                            <div class="flex items-center px-5">
                                <div class="flex-shrink-0">
                                    <div class="h-10 w-10 rounded-full bg-indigo-400 flex items-center justify-center text-white font-medium">
                                        @GetUserInitials()
                                    </div>
                                </div>
                                <div class="ml-3">
                                    <div class="text-base font-medium text-white">@userName</div>
                                    <div class="text-sm font-medium text-indigo-300">@userEmail</div>
                                </div>
                                <button type="button" class="ml-auto flex-shrink-0 bg-indigo-600 p-1 rounded-full text-indigo-200 hover:text-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-indigo-600 focus:ring-white">
                                    <span class="sr-only">View notifications</span>
                                    <svg class="h-6 w-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9" />
                                    </svg>
                                </button>
                            </div>
                            <div class="mt-3 px-2 space-y-1">
                                <a href="/profile" class="block px-3 py-2 rounded-md text-base font-medium text-indigo-200 hover:text-white hover:bg-indigo-500">
                                    Your Profile
                                </a>
                                <a href="/settings" class="block px-3 py-2 rounded-md text-base font-medium text-indigo-200 hover:text-white hover:bg-indigo-500">
                                    Settings
                                </a>
                                <a @onclick="Logout" class="block px-3 py-2 rounded-md text-base font-medium text-indigo-200 hover:text-white hover:bg-indigo-500 cursor-pointer">
                                    Sign out
                                </a>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </nav>
    </div>

    <main class="-mt-32">
        <div class="max-w-7xl mx-auto pb-12 px-4 sm:px-6 lg:px-8">
            @Body
        </div>
    </main>
</div>

@code {
    private bool isMobileMenuOpen = false;
    private string _appTitle = "IndiTracker";

    private bool isProfileDropdownOpen = false;
    private bool isAdmin = false;
    private string userName = "";
    private string userEmail = "";
    private string userInitials = "";

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Load app settings
            var settings = await AppSettingsService.GetAppSettingsAsync();
            _appTitle = settings.AppTitle;
            
            // In a real app, you would get this from your authentication state
            // For now, we'll use some dummy data
            userName = "John Doe";
            userEmail = "john.doe@example.com";
            isAdmin = true; // This would be determined by the user's role
            
            // Extract initials from the user's name
            if (!string.IsNullOrEmpty(userName))
            {
                var nameParts = userName.Split(' ', StringSplitOptions.RemoveEmptyEntries);
                if (nameParts.Length > 0)
                {
                    userInitials = nameParts[0][0].ToString();
                    if (nameParts.Length > 1)
                    {
                        userInitials += nameParts[^1][0];
                    }
                }
            }
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "Error initializing MainLayout");
            // Use default values if there's an error
            _appTitle = "IndiTracker";
        }
    }

    private string GetUserInitials()
    {
        if (!string.IsNullOrEmpty(userInitials))
        {
            return userInitials;
        }
        
        // Fallback to first letter of email if no name is available
        if (!string.IsNullOrEmpty(userEmail))
        {
            return userEmail[0].ToString().ToUpper();
        }
        
        return "?";
    }

    private bool IsActive(string path)
    {
        return NavigationManager.Uri.EndsWith(path, StringComparison.OrdinalIgnoreCase) ||
               (path != "/" && NavigationManager.Uri.Contains(path, StringComparison.OrdinalIgnoreCase));
    }

    private void ToggleMobileMenu()
    {
        isMobileMenuOpen = !isMobileMenuOpen;
        // Close profile dropdown when mobile menu is toggled
        if (isMobileMenuOpen)
        {
            isProfileDropdownOpen = false;
        }
    }

    private void ToggleProfileDropdown()
    {
        isProfileDropdownOpen = !isProfileDropdownOpen;
        // Close mobile menu when profile dropdown is toggled
        if (isProfileDropdownOpen)
        {
            isMobileMenuOpen = false;
        }
    }

    private async Task Logout()
    {
        try
        {
            await AuthService.Logout();
            NavigationManager.NavigateTo("/login", true);
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "Error during logout");
        }
    }
}
