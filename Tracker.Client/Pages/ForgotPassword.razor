@page "/forgot-password"
@using Tracker.Client.Services
@using Tracker.Shared.Auth
@using Tracker.Shared.Auth.AuthModels
@inject IAuthService AuthService
@inject NavigationManager NavigationManager
@inject ILogger<ForgotPassword> Logger

<PageTitle>Forgot Password</PageTitle>

<div class="min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8">
    <div class="max-w-md w-full space-y-8">
        <div>
            <h2 class="mt-6 text-center text-3xl font-extrabold text-gray-900">
                Forgot your password?
            </h2>
            <p class="mt-2 text-center text-sm text-gray-600">
                Enter your email and we'll send you a link to reset your password.
            </p>
        </div>

        <div class="mt-8 bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10">
            @if (isEmailSent)
            {
                <div class="rounded-md bg-green-50 p-4">
                    <div class="flex">
                        <div class="flex-shrink-0">
                            <svg class="h-5 w-5 text-green-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
                            </svg>
                        </div>
                        <div class="ml-3">
                            <p class="text-sm font-medium text-green-800">
                                Password reset email sent! Please check your email for further instructions.
                            </p>
                        </div>
                    </div>
                </div>
                
                <div class="mt-6">
                    <button @onclick="() => NavigationManager.NavigateTo('/login')" 
                            class="w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                        Back to Login
                    </button>
                </div>
            }
            else
            {
                <EditForm Model="@model" OnValidSubmit="HandleValidSubmit" class="space-y-6">
                    <div>
                        <label for="email" class="block text-sm font-medium text-gray-700">Email address</label>
                        <InputText id="email" @bind-Value="model.Email" class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm" />
                        <ValidationMessage For="@(() => model.Email)" class="text-red-600 text-sm" />
                    </div>

                    <div>
                        <button type="submit" class="w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                            Send reset link
                        </button>
                    </div>
                    
                    @if (!string.IsNullOrEmpty(errorMessage))
                    {
                        <div class="rounded-md bg-red-50 p-4">
                            <div class="flex">
                                <div class="flex-shrink-0">
                                    <svg class="h-5 w-5 text-red-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                                        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
                                    </svg>
                                </div>
                                <div class="ml-3">
                                    <h3 class="text-sm font-medium text-red-800">
                                        @errorMessage
                                    </h3>
                                </div>
                            </div>
                        </div>
                    }
                </EditForm>
                
                <div class="mt-6">
                    <div class="relative">
                        <div class="absolute inset-0 flex items-center">
                            <div class="w-full border-t border-gray-300"></div>
                        </div>
                        <div class="relative flex justify-center text-sm">
                            <span class="px-2 bg-white text-gray-500">
                                Remember your password?
                            </span>
                        </div>
                    </div>

                    <div class="mt-6">
                        <a href="/login" class="w-full flex justify-center py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                            Sign in
                        </a>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@code {
    private ForgotPasswordRequest model = new();
    private string errorMessage = string.Empty;
    private bool isEmailSent = false;

    private async Task HandleValidSubmit()
    {
        try
        {
            errorMessage = string.Empty;
            
            // In a real app, you would call your API to send a password reset email
            // For now, we'll just simulate a successful response
            await Task.Delay(1000); // Simulate API call
            
            isEmailSent = true;
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "Error sending password reset email");
            errorMessage = "An error occurred while processing your request. Please try again.";
        }
    }
}
